#!/bin/bash
if [ ! -e log ]; then mkdir log; fi

if [ $# -eq 0 ]; then
   echo Usage:
   echo "  mycmsRun <cfg.py> [cms inputs]"
   echo "                    [-a file_name_appendix]"
   echo "                    [-c check_only]"
   echo "Eg:"
   echo "  mycmsRun skim_cfg_custom_skim_options.py print files=file:Minbias_DIGI_L1_DIGI2RAW.root maxEvents=12 output=file:Minbias_raw_cmssw322patch2_Digi2RawFix_Ecal_Dttf.root"
   echo "  mycmsRun skim_cfg_custom_skim_options.py print files_load=file:Minbias_DIGI_L1_DIGI2RAW.txt maxEvents=12 output=file:Minbias_raw_cmssw322patch2_Digi2RawFix_Ecal_Dttf.root"
   exit 1;
fi

# initialize var's
appendix=
check=false
# save options
cmdline="mycmsRun ""$@"
cmsopt=
cfgName=${1##*/}
# par in vars
while [ $# -gt 0 ]; do
   case $1 in 
      -a)  appendix=$2
      shift
      ;;
      -c)  check=true
      ;;
      --)  shift # By convention, --ends options
      break
      ;;
      *)  cmsopt="$cmsopt $1"
#      ;;
   esac
   shift # setup for next iteration
done

outf=${cfgName%.py}_${appendix}.txt

echo $cmdline > log/$outf
echo cmsRun options: "$cmsopt" >> log/$outf
run="(time cmsRun ""$cmsopt"" >> log/$outf 2>&1) 2>> log/$outf &"
echo   At `date` >> log/$outf

if [ $check == false ]; then
   ./create_custom_python_cfg.sh
   echo $run
   echo run!
   eval $run
fi

# check if job crashed already
tail log/$outf
